{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Tests whether all properties (own and inherited) of an object pass a test implemented by a predicate function.\n*\n* @param {Object} obj - input object\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*   return ( v > 0 );\n* }\n*\n* var o = { a: 1, b: 2, c: 3 };\n*\n* var bool = everyInBy( o, isPositive );\n* // returns true\n*/\nfunction everyInBy( obj, predicate, thisArg ) {\n\tvar key;\n\tif (typeof obj !== 'object' || obj === null) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\n\tfor ( key in obj ) {\n\t\tif ( !predicate.call( thisArg, obj[ key ], key, obj ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = everyInBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in an object pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils-every-in-by\n*\n* @example\n* var everyInBy = require( '@stdlib/utils-every-in-by' );\n*\n* function isPositive( v ) {\n*   return ( v > 0 );\n* }\n*\n* var o = { a: 1, b: 2, c: 3 }\n*\n* var bool = everyInBy( o, isPositive )\n* // returns true\n*\n* o.a = -1\n*\n* bool = everyInBy( o, isPositive )\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,4BAA6B,EACnDC,EAAS,QAAS,uBAAwB,EAyB9C,SAASC,EAAWC,EAAKC,EAAWC,EAAU,CAC7C,IAAIC,EACJ,GAAI,OAAOH,GAAQ,UAAYA,IAAQ,KACtC,MAAM,IAAI,UAAWF,EAAQ,mEAAoEE,CAAI,CAAE,EAExG,GAAK,CAACH,EAAYI,CAAU,EAC3B,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAU,CAAE,EAGhH,IAAME,KAAOH,EACZ,GAAK,CAACC,EAAU,KAAMC,EAASF,EAAKG,CAAI,EAAGA,EAAKH,CAAI,EACnD,MAAO,GAIT,MAAO,EACR,CAKAJ,EAAO,QAAUG,ICxBjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isFunction", "format", "everyInBy", "obj", "predicate", "thisArg", "key", "main"]
}
